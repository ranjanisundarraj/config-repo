pipeline {
	agent any
		stages {
			//Properties File Initiation
			stage('Properties File Load') {
				steps {
					script {
						gitProps = readProperties file: 'ConfigRepo/PropertiesFile/pipeline.properties'
						echo "Properties File loaded"
						}
					}
			}

			//GIT Cloning
			stage('Git Clone') {
				steps {
					git url: gitProps.GIT_APP_REPO,
					branch: gitProps.GIT_APP_REPO_BRANCH
					echo 'Git Clone completed'
					}
			}

			//SonarQube Analysis
			stage('SonarQube Analysis') {
				steps {
					dir(gitProps.PROJECT_PATH) {
						sh gitProps.SONAR_SCAN
						echo 'SonarQube Analysis completed'
					}
				}
			}
			
			//Maven Build
			stage('Build Maven') {
				steps {
					dir(gitProps.PROJECT_PATH) {
						sh gitProps.MAVEN_BUILD
						echo 'Maven Build completed'
					}
				}
			}			
			
			//Artifactory Upload
			stage('Artifacts Upload') {
				steps {
					script {
						server = Artifactory.server gitProps.ARTIFACTORY_ID
						def uploadSpec = """{
							"files": [
	                    		{
	                    			"pattern": "target/*.war",
	                        		"target": "example-repo-local/target/Build #${env.BUILD_NUMBER}/"
	                    		}
	                    		]
	                		}"""
	                	server.upload(uploadSpec) 
              			echo "Artifact Uploaded"
	            	}
		}
			
			// Docker Deploying
			stage('Docker Deployment') {
				steps {
					script {
						try	{
							sh deployProps.dockerContainerId
							res=readFile('result').trim()
							
							if(res!=null) {
								sh deployProps.dockerContainerRm
								echo "Docker Container Found and removed"
							}
						} catch (err) {
							echo "Delete Failed"
						}
						
						sh deployProps.dockerDeploy
						echo "Deployment Success"
						sh deployProps.dockerRestart
						echo "Docker Restarted"
						
					}		
				}
			}
					
		}
		
			
			post {
			always {
				script {
					emailext ( 
						subject: '${DEFAULT_SUBJECT}', 
						body: '${DEFAULT_CONTENT}',
						to: gitProps.TO_RECIPIENT
					)
					echo "Status Mail Sent"
				}
	       		 }
		}	
					
	}	
		
	}
	}
