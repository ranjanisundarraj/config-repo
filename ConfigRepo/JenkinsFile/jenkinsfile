pipeline {
	agent any
	stages {
		//Properties File Initiation
		stage('Properties File Load') 
			{
				steps {
					script {
						gitProps = readProperties file: 'ConfigRepo/PropertiesFile/pipeline.properties'
						echo "Properties File loaded"
						}
					}
			}

			//GIT Cloning
			stage('Git Clone') 
			{
				steps {
					git url: gitProps.GIT_APP_REPO,
					branch: gitProps.GIT_APP_REPO_BRANCH
					echo 'Git Clone completed'
					}
			}

			//SonarQube Analysis
			stage('SonarQube Analysis') {
				steps {
					dir(gitProps.PROJECT_PATH) {
						sh gitProps.SONAR_SCAN
						echo 'SonarQube Analysis completed'
					}
				}
			}
			
			//Maven Build
			stage('Build Maven') {
				steps {
					dir(gitProps.PROJECT_PATH) {
						sh gitProps.MAVEN_BUILD
						echo 'Maven Build completed'
					}
				}
			}			
			
			//Artifactory Upload
			stage('Artifacts Upload') {
				steps {
					script {
						server = Artifactory.server gitProps.ARTIFACTORY_ID
						def uploadSpec = """{
								"files": [
	                    						{
	                    			"pattern": "target/*.war",
	                        		"target": "example-repo-local/target/Build #${env.BUILD_NUMBER}/"
	                    						}
	                    						]
	                					}"""
	                				server.upload(uploadSpec) 
              						echo "Artifact Uploaded"
	            				}
					}
			}		
			
		//Docker Deploying
			stage('Docker Deployment') {
			steps {
				script {
					try{
					sh gitProps.DOCKER_CONTAINER_ID
					res=readFile('result').trim()
						if(res!=null) {
							sh gitProps.DOCKER_CONTAINER_RM
							echo "Docker Container Found and removed"
						}
				    } catch (err) {
						echo "Delete Failed"
				    }
						
						sh gitProps.DOCKER_DEPLOY
						echo "Deployment Success"
						sh gitProps.DOCKER_RESTART
						echo "Docker Restarted"
						
					}		
				}
			}							
	}
	
	//Email Trigger
			post {
			always {
				script {
					emailext ( 
						subject: '${DEFAULT_SUBJECT}', 
						body: '${DEFAULT_CONTENT}',
						to: gitProps.TO_RECIPIENT
						)
							echo "Status Mail Sent"
					}
	       			}
			}	

}

