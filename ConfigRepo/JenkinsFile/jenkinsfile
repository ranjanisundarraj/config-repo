pipeline {
	agent any
		stages {
			//Properties File loading
			stage('Load Properties File') {
				steps {
					script {
						gitProps = readProperties file: 'PropertiesFile/PropertiesFile.properties'
						echo "Properties File load Success"
						}
					}
			}

			//GIT Cloning
			stage('SCM Checkout') {
				steps {
					git url: gitHubProps.GIT_APP_REPO,
					branch: gitHubProps.GIT_APP_REPO_BRANCH
					echo 'SCM Checkout Success'
					}
			}

			//Sonar Scanning
			stage('SonarQube Analysis') {
				steps {
					dir(gitHubProps.PROJECT_PATH) {
						sh sonarProps.BUILD_SONAR_SCAN
						echo 'SoanrQube Analysis Success'
					}
				}
			}
			
			//Maven Building
			stage('Maven Build') {
				steps {
					dir(gitHubProps.PROJECT_PATH) {
						sh gitHubProps.MAVEN_BUILD
						echo 'Maven Build Success'
					}
				}
			}			
			
			//Artifact Archiving and Uploading
			stage('Artifact Upload') {
				steps {
					script {
						server = Artifactory.server artProps.ARTIFACTORY_SERVER
						def uploadSpec = """{
							"files": [
	                    		{
	                    			"pattern": "target/*.war",
	                        		"target": "demo-java/target/Build #${env.BUILD_NUMBER}/"
	                    		}
	                    		]
	                		}"""
	                		echo "Artifact Archival Success"
	                	server.upload(uploadSpec) 
              			echo "Artifact Upload Success"
	            	}
				}
			}	
					
		}